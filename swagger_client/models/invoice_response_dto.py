# coding: utf-8

"""
    e-MCF

    DGI Bénin - Tous droits réservés  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class InvoiceResponseDto(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'uid': 'str',
        'ta': 'int',
        'tb': 'int',
        'tc': 'int',
        'td': 'int',
        'taa': 'int',
        'tab': 'int',
        'tac': 'int',
        'tad': 'int',
        'tae': 'int',
        'taf': 'int',
        'hab': 'int',
        'had': 'int',
        'vab': 'int',
        'vad': 'int',
        'aib': 'int',
        'ts': 'int',
        'total': 'int',
        'error_code': 'str',
        'error_desc': 'str'
    }

    attribute_map = {
        'uid': 'uid',
        'ta': 'ta',
        'tb': 'tb',
        'tc': 'tc',
        'td': 'td',
        'taa': 'taa',
        'tab': 'tab',
        'tac': 'tac',
        'tad': 'tad',
        'tae': 'tae',
        'taf': 'taf',
        'hab': 'hab',
        'had': 'had',
        'vab': 'vab',
        'vad': 'vad',
        'aib': 'aib',
        'ts': 'ts',
        'total': 'total',
        'error_code': 'errorCode',
        'error_desc': 'errorDesc'
    }

    def __init__(self, uid=None, ta=None, tb=None, tc=None, td=None, taa=None, tab=None, tac=None, tad=None, tae=None, taf=None, hab=None, had=None, vab=None, vad=None, aib=None, ts=None, total=None, error_code=None, error_desc=None):  # noqa: E501
        """InvoiceResponseDto - a model defined in Swagger"""  # noqa: E501
        self._uid = None
        self._ta = None
        self._tb = None
        self._tc = None
        self._td = None
        self._taa = None
        self._tab = None
        self._tac = None
        self._tad = None
        self._tae = None
        self._taf = None
        self._hab = None
        self._had = None
        self._vab = None
        self._vad = None
        self._aib = None
        self._ts = None
        self._total = None
        self._error_code = None
        self._error_desc = None
        self.discriminator = None
        if uid is not None:
            self.uid = uid
        if ta is not None:
            self.ta = ta
        if tb is not None:
            self.tb = tb
        if tc is not None:
            self.tc = tc
        if td is not None:
            self.td = td
        if taa is not None:
            self.taa = taa
        if tab is not None:
            self.tab = tab
        if tac is not None:
            self.tac = tac
        if tad is not None:
            self.tad = tad
        if tae is not None:
            self.tae = tae
        if taf is not None:
            self.taf = taf
        if hab is not None:
            self.hab = hab
        if had is not None:
            self.had = had
        if vab is not None:
            self.vab = vab
        if vad is not None:
            self.vad = vad
        if aib is not None:
            self.aib = aib
        if ts is not None:
            self.ts = ts
        if total is not None:
            self.total = total
        if error_code is not None:
            self.error_code = error_code
        if error_desc is not None:
            self.error_desc = error_desc

    @property
    def uid(self):
        """Gets the uid of this InvoiceResponseDto.  # noqa: E501


        :return: The uid of this InvoiceResponseDto.  # noqa: E501
        :rtype: str
        """
        return self._uid

    @uid.setter
    def uid(self, uid):
        """Sets the uid of this InvoiceResponseDto.


        :param uid: The uid of this InvoiceResponseDto.  # noqa: E501
        :type: str
        """

        self._uid = uid

    @property
    def ta(self):
        """Gets the ta of this InvoiceResponseDto.  # noqa: E501


        :return: The ta of this InvoiceResponseDto.  # noqa: E501
        :rtype: int
        """
        return self._ta

    @ta.setter
    def ta(self, ta):
        """Sets the ta of this InvoiceResponseDto.


        :param ta: The ta of this InvoiceResponseDto.  # noqa: E501
        :type: int
        """

        self._ta = ta

    @property
    def tb(self):
        """Gets the tb of this InvoiceResponseDto.  # noqa: E501


        :return: The tb of this InvoiceResponseDto.  # noqa: E501
        :rtype: int
        """
        return self._tb

    @tb.setter
    def tb(self, tb):
        """Sets the tb of this InvoiceResponseDto.


        :param tb: The tb of this InvoiceResponseDto.  # noqa: E501
        :type: int
        """

        self._tb = tb

    @property
    def tc(self):
        """Gets the tc of this InvoiceResponseDto.  # noqa: E501


        :return: The tc of this InvoiceResponseDto.  # noqa: E501
        :rtype: int
        """
        return self._tc

    @tc.setter
    def tc(self, tc):
        """Sets the tc of this InvoiceResponseDto.


        :param tc: The tc of this InvoiceResponseDto.  # noqa: E501
        :type: int
        """

        self._tc = tc

    @property
    def td(self):
        """Gets the td of this InvoiceResponseDto.  # noqa: E501


        :return: The td of this InvoiceResponseDto.  # noqa: E501
        :rtype: int
        """
        return self._td

    @td.setter
    def td(self, td):
        """Sets the td of this InvoiceResponseDto.


        :param td: The td of this InvoiceResponseDto.  # noqa: E501
        :type: int
        """

        self._td = td

    @property
    def taa(self):
        """Gets the taa of this InvoiceResponseDto.  # noqa: E501


        :return: The taa of this InvoiceResponseDto.  # noqa: E501
        :rtype: int
        """
        return self._taa

    @taa.setter
    def taa(self, taa):
        """Sets the taa of this InvoiceResponseDto.


        :param taa: The taa of this InvoiceResponseDto.  # noqa: E501
        :type: int
        """

        self._taa = taa

    @property
    def tab(self):
        """Gets the tab of this InvoiceResponseDto.  # noqa: E501


        :return: The tab of this InvoiceResponseDto.  # noqa: E501
        :rtype: int
        """
        return self._tab

    @tab.setter
    def tab(self, tab):
        """Sets the tab of this InvoiceResponseDto.


        :param tab: The tab of this InvoiceResponseDto.  # noqa: E501
        :type: int
        """

        self._tab = tab

    @property
    def tac(self):
        """Gets the tac of this InvoiceResponseDto.  # noqa: E501


        :return: The tac of this InvoiceResponseDto.  # noqa: E501
        :rtype: int
        """
        return self._tac

    @tac.setter
    def tac(self, tac):
        """Sets the tac of this InvoiceResponseDto.


        :param tac: The tac of this InvoiceResponseDto.  # noqa: E501
        :type: int
        """

        self._tac = tac

    @property
    def tad(self):
        """Gets the tad of this InvoiceResponseDto.  # noqa: E501


        :return: The tad of this InvoiceResponseDto.  # noqa: E501
        :rtype: int
        """
        return self._tad

    @tad.setter
    def tad(self, tad):
        """Sets the tad of this InvoiceResponseDto.


        :param tad: The tad of this InvoiceResponseDto.  # noqa: E501
        :type: int
        """

        self._tad = tad

    @property
    def tae(self):
        """Gets the tae of this InvoiceResponseDto.  # noqa: E501


        :return: The tae of this InvoiceResponseDto.  # noqa: E501
        :rtype: int
        """
        return self._tae

    @tae.setter
    def tae(self, tae):
        """Sets the tae of this InvoiceResponseDto.


        :param tae: The tae of this InvoiceResponseDto.  # noqa: E501
        :type: int
        """

        self._tae = tae

    @property
    def taf(self):
        """Gets the taf of this InvoiceResponseDto.  # noqa: E501


        :return: The taf of this InvoiceResponseDto.  # noqa: E501
        :rtype: int
        """
        return self._taf

    @taf.setter
    def taf(self, taf):
        """Sets the taf of this InvoiceResponseDto.


        :param taf: The taf of this InvoiceResponseDto.  # noqa: E501
        :type: int
        """

        self._taf = taf

    @property
    def hab(self):
        """Gets the hab of this InvoiceResponseDto.  # noqa: E501


        :return: The hab of this InvoiceResponseDto.  # noqa: E501
        :rtype: int
        """
        return self._hab

    @hab.setter
    def hab(self, hab):
        """Sets the hab of this InvoiceResponseDto.


        :param hab: The hab of this InvoiceResponseDto.  # noqa: E501
        :type: int
        """

        self._hab = hab

    @property
    def had(self):
        """Gets the had of this InvoiceResponseDto.  # noqa: E501


        :return: The had of this InvoiceResponseDto.  # noqa: E501
        :rtype: int
        """
        return self._had

    @had.setter
    def had(self, had):
        """Sets the had of this InvoiceResponseDto.


        :param had: The had of this InvoiceResponseDto.  # noqa: E501
        :type: int
        """

        self._had = had

    @property
    def vab(self):
        """Gets the vab of this InvoiceResponseDto.  # noqa: E501


        :return: The vab of this InvoiceResponseDto.  # noqa: E501
        :rtype: int
        """
        return self._vab

    @vab.setter
    def vab(self, vab):
        """Sets the vab of this InvoiceResponseDto.


        :param vab: The vab of this InvoiceResponseDto.  # noqa: E501
        :type: int
        """

        self._vab = vab

    @property
    def vad(self):
        """Gets the vad of this InvoiceResponseDto.  # noqa: E501


        :return: The vad of this InvoiceResponseDto.  # noqa: E501
        :rtype: int
        """
        return self._vad

    @vad.setter
    def vad(self, vad):
        """Sets the vad of this InvoiceResponseDto.


        :param vad: The vad of this InvoiceResponseDto.  # noqa: E501
        :type: int
        """

        self._vad = vad

    @property
    def aib(self):
        """Gets the aib of this InvoiceResponseDto.  # noqa: E501


        :return: The aib of this InvoiceResponseDto.  # noqa: E501
        :rtype: int
        """
        return self._aib

    @aib.setter
    def aib(self, aib):
        """Sets the aib of this InvoiceResponseDto.


        :param aib: The aib of this InvoiceResponseDto.  # noqa: E501
        :type: int
        """

        self._aib = aib

    @property
    def ts(self):
        """Gets the ts of this InvoiceResponseDto.  # noqa: E501


        :return: The ts of this InvoiceResponseDto.  # noqa: E501
        :rtype: int
        """
        return self._ts

    @ts.setter
    def ts(self, ts):
        """Sets the ts of this InvoiceResponseDto.


        :param ts: The ts of this InvoiceResponseDto.  # noqa: E501
        :type: int
        """

        self._ts = ts

    @property
    def total(self):
        """Gets the total of this InvoiceResponseDto.  # noqa: E501


        :return: The total of this InvoiceResponseDto.  # noqa: E501
        :rtype: int
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this InvoiceResponseDto.


        :param total: The total of this InvoiceResponseDto.  # noqa: E501
        :type: int
        """

        self._total = total

    @property
    def error_code(self):
        """Gets the error_code of this InvoiceResponseDto.  # noqa: E501


        :return: The error_code of this InvoiceResponseDto.  # noqa: E501
        :rtype: str
        """
        return self._error_code

    @error_code.setter
    def error_code(self, error_code):
        """Sets the error_code of this InvoiceResponseDto.


        :param error_code: The error_code of this InvoiceResponseDto.  # noqa: E501
        :type: str
        """

        self._error_code = error_code

    @property
    def error_desc(self):
        """Gets the error_desc of this InvoiceResponseDto.  # noqa: E501


        :return: The error_desc of this InvoiceResponseDto.  # noqa: E501
        :rtype: str
        """
        return self._error_desc

    @error_desc.setter
    def error_desc(self, error_desc):
        """Sets the error_desc of this InvoiceResponseDto.


        :param error_desc: The error_desc of this InvoiceResponseDto.  # noqa: E501
        :type: str
        """

        self._error_desc = error_desc

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InvoiceResponseDto, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InvoiceResponseDto):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
